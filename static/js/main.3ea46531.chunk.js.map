{"version":3,"sources":["navBar.js","sideBar.js","tickets.js","ticket.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","toolbar","paddingRight","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","concat","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","appBarSpacer","mixins","content","height","overflow","container","paddingTop","spacing","paddingBottom","paper","padding","flexDirection","fixedHeight","Navbar","_ref","open","handleDrawerOpen","classes","React","createElement","AppBar","position","className","clsx","Toolbar","IconButton","edge","color","aria-label","onClick","MenuIcon","Typography","component","variant","noWrap","Badge","badgeContent","NotificationsIcon","toolbarIcon","alignItems","justifyContent","drawerPaper","whiteSpace","drawerPaperClose","overflowX","[object Object]","breakpoints","up","link","textDecoration","SideBar","handleDrawerClose","Drawer","ChevronLeftIcon","Divider","List","Link","to","ListItem","button","ListItemIcon","DashboardIcon","ListItemText","primary","AssignmentIcon","PostAddIcon","ListSubheader","inset","PeopleIcon","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","name","code","population","size","density","rows","maxHeight","Ticket","tickets","setTickets","useState","page","setPage","rowsPerPage","setRowsPerPage","useEffect","storedTickets","JSON","parse","localStorage","getItem","length","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","key","style","TableBody","slice","row","hover","role","tabIndex","TablePagination","rowsPerPageOptions","count","onChangePage","handleChangePage","event","newPage","onChangeRowsPerPage","target","useParams","data","setData","x","find","document","Dashboard","setOpen","setItem","stringify","Router","CssBaseline","NavBar","Switch","Route","path","exact","Tickets","rootElement","getElementById","ReactDOM","render","App"],"mappings":"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","file":"static/js/main.3ea46531.chunk.js","sourcesContent":["import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24 // keep right padding when drawer closed\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: 36\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\"\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\"\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\"\r\n  },\r\n  fixedHeight: {\r\n    height: 240\r\n  }\r\n}));\r\n\r\nexport default function Navbar({ open, handleDrawerOpen }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"absolute\"\r\n      className={clsx(classes.appBar, open && classes.appBarShift)}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={handleDrawerOpen}\r\n          className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          noWrap\r\n          className={classes.title}\r\n        >\r\n          Ticket System\r\n        </Typography>\r\n        <IconButton color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9)\r\n    }\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\"\r\n  }\r\n}));\r\n\r\nexport default function SideBar({ open, handleDrawerClose }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      classes={{\r\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\r\n      }}\r\n      open={open}\r\n    >\r\n      <div className={classes.toolbarIcon}>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        <div>\r\n          <Link className={classes.link} to=\"/\">\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <DashboardIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Dashboard\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link className={classes.link} to=\"/tickets\">\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <AssignmentIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Tickets\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link className={classes.link} to=\"/erstellen\">\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <PostAddIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Ticket erstellen\" />\r\n            </ListItem>\r\n          </Link>\r\n        </div>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <div>\r\n          <ListSubheader inset>Administration</ListSubheader>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Alle Tickets\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Benutzer Verwaltung\" />\r\n          </ListItem>\r\n        </div>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst columns = [\r\n  { id: \"name\", label: \"Name\", minWidth: 170 },\r\n  { id: \"code\", label: \"ISO\\u00a0Code\", minWidth: 100 },\r\n  {\r\n    id: \"population\",\r\n    label: \"Population\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"size\",\r\n    label: \"Size\\u00a0(km\\u00b2)\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString()\r\n  },\r\n  {\r\n    id: \"density\",\r\n    label: \"Density\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toFixed(2)\r\n  }\r\n];\r\n\r\nfunction createData(name, code, population, size) {\r\n  const density = population / size;\r\n  return { name, code, population, size, density };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"India\", \"IN\", 1324171354, 3287263),\r\n  createData(\"China\", \"CN\", 1403500365, 9596961),\r\n  createData(\"Italy\", \"IT\", 60483973, 301340),\r\n  createData(\"United States\", \"US\", 327167434, 9833520),\r\n  createData(\"Canada\", \"CA\", 37602103, 9984670),\r\n  createData(\"Australia\", \"AU\", 25475400, 7692024),\r\n  createData(\"Germany\", \"DE\", 83019200, 357578),\r\n  createData(\"Ireland\", \"IE\", 4857000, 70273),\r\n  createData(\"Mexico\", \"MX\", 126577691, 1972550),\r\n  createData(\"Japan\", \"JP\", 126317000, 377973),\r\n  createData(\"France\", \"FR\", 67022000, 640679),\r\n  createData(\"United Kingdom\", \"GB\", 67545757, 242495),\r\n  createData(\"Russia\", \"RU\", 146793744, 17098246),\r\n  createData(\"Nigeria\", \"NG\", 200962417, 923768),\r\n  createData(\"Brazil\", \"BR\", 210147125, 8515767)\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  container: {\r\n    maxHeight: 440\r\n  }\r\n});\r\n\r\nexport default function Ticket() {\r\n  const classes = useStyles();\r\n\r\n  const [tickets, setTickets] = useState({});\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const storedTickets = JSON.parse(localStorage.getItem(\"tickets\"));\r\n    if (storedTickets) setTickets(storedTickets);\r\n  }, []);\r\n\r\n  return tickets.length !== 0 ? (\r\n    \"No tickets found\"\r\n  ) : (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\n\r\nexport default function Ticket() {\r\n  const { id } = useParams();\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const tickets = JSON.parse(localStorage.getItem(\"tickets\"));\r\n    const x = tickets.find(x => x.id === id);\r\n    if (x) {\r\n      setData(x);\r\n      document.title = `Ticket #${id}`;\r\n    }\r\n  }, [id]);\r\n\r\n  return !data.id ? (\r\n    \"Not found\"\r\n  ) : (\r\n    <div>\r\n      <h2>Ticket #{id}</h2>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport NavBar from \"./navBar.js\";\nimport SideBar from \"./sideBar.js\";\nimport Tickets from \"./tickets.js\";\nimport Ticket from \"./ticket.js\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n    padding: theme.spacing(10)\n  }\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    const tickets = localStorage.getItem(\"tickets\");\n    if (!tickets) localStorage.setItem(\"tickets\", JSON.stringify([]));\n  }, []);\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <CssBaseline />\n        <NavBar open={open} handleDrawerOpen={handleDrawerOpen} />\n        <SideBar open={open} handleDrawerClose={handleDrawerClose} />\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Switch>\n            <Route path=\"/\" exact>\n              Main\n            </Route>\n            <Route path=\"/tickets\">\n              <Tickets />\n            </Route>\n            <Route path=\"/ticket/:id\">\n              <Ticket />\n            </Route>\n            <Route path=\"/erstellen\">Hier kannst du ein Ticket erstellen</Route>\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}